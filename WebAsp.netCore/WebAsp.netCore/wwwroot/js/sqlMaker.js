
var currentTable = 'MySQL';

//MySql
const getMySqlTransferFromCheckBox = (item) => {
    switch (item) {
        case "pk": return "PRIMARY KEY ";
        case "nn": return "NOT NULL ";
        case "uq": return "UNIQUE ";
        case "b":  return "BINARY ";
        case "zf": return "(Input Size Number) ZEROFILL ";
        case "ai": return "AUTO_INCREMENT ";
        case "g":  return "GENERATED ALWAYS AS (Input your data on here (ex lastName + firstName)) ";
    }
    return "";
}

//MsSql
const getMsSqlTransferFromCheckBox = (item) => {
    switch (item) {
        case "pk": return "PRIMARY KEY ";
        case "nn": return "NOT NULL ";
        case "uq": return "UNIQUE ";
        case "ai": return "IDENTITY(1,1) ";
    }
    return "";
}

//Oracle
const getOracleTransferFromCheckBox = (item) => {
    switch (item) {
        case "pk": return "PRIMARY KEY ";
        case "nn": return "NOT NULL ";
        case "uq": return "UNIQUE ";
        case "ai": return "GENERATED BY DEFAULT AS IDENTITY ";
    }
    return "";
}

//SQLServer
const getSQLServerTransferFromCheckBox = (item) => {
    switch (item) {
        case "pk": return "PRIMARY KEY ";
        case "nn": return "NOT NULL ";
        case "uq": return "UNIQUE ";
        case "ai": return "IDENTITY(1,1) ";
    }
    return "";
}

const getQueryFromCheckBoxChecked = (item) => {
    switch (getSqlType()) {
        case "MySQL": return getMySqlTransferFromCheckBox(item);
        case "MsSQL": return getMsSqlTransferFromCheckBox(item);
        case "Oracle": return getOracleTransferFromCheckBox(item);
        case "SQLServer": return getSQLServerTransferFromCheckBox(item);
    }
    return "";
}

const getTableRootNode = (element) => {
    return element.parentNode.parentNode.parentNode.parentNode;
}

const getTableModelByList = (element) => {
 
    let tableMaker = element;
    var rowList = [[], [], [], [], [], [], [], [], [], []];
  
    for (var i = 1; i < tableMaker.children.length; i++) {

        let row = tableMaker.children.item(i);
        for (var j = 0; j < row.children.length - 1; j++) {
            var rowData = row.children.item(j).firstElementChild;
            if (rowData.getAttribute("type") == "checkbox") {
                rowList[j].push(rowData.checked == true ? row.children.item(j).headers : "");
            }
            else if (rowData.getAttribute("type") == "text" && rowData.value != '') {
                rowList[j].push(rowData.value);
            }
            else
                return null;
        }
    }
    return rowList;
}

const getCreateTableSQLCode = (element) => {
    onOffModal();

    let tableName = getTableRootNode(element).id;
    var rowList = getTableModelByList(document.getElementById(tableName + 'Table').firstElementChild);
    var result = "CREATE TABLE " + tableName + "(<br>";
    
    for (var i = 0; i < rowList[0].length; i++) {
        result += "&ensp;&emsp;";
        for (var j = 0; j < rowList.length - 1; j++) {
            if (j > 1 && rowList[j][i] != '') {
                result += getQueryFromCheckBoxChecked(rowList[j][i]) + " ";
            }
            else if (rowList[j][i] != ''){
                result = result + rowList[j][i] + " ";
            }
        }
        result += ' ,<br>';
    }
    result = result.slice(0, result.length - 5) + "<br>);";
    insertResultSQLToModal(result);
}

const getSelectTableSQLCode = (element) => {
    onOffModal();
    insertResultSQLToModal("Select * From " + getTableRootNode(element).id + ';');
}

const getColumnNames = (element) => {
    let tableMaker = document.getElementById(getTableRootNode(element).id + 'Table').firstElementChild;
}

const getInsertTableSQLCode = (element) => {
    onOffModal();
    var resultQuery = 'INSERT INTO table_name(column1, column2, column3, ...) VALUES(value1, value2, value3, ...)';
    insertResultSQLToModal(resultQuery);
}

const tableDisplayChangeAsTableType = (element) => {

    if (element.value == currentTable)
        return; 
    document.getElementById(currentTable + 'Table').style.display = 'none';
    currentTable = element.value;
    document.getElementById(currentTable + 'Table').style.display = 'block';
}

const insertResultSQLToModal = (resultQuery) =>{
    document.getElementById('resultSQL').innerHTML = resultQuery;
}

const onOffModal = () => {
    var myModal = document.getElementById("myModal");
    myModal.style.display = (myModal.style.display == 'none' ? 'block' : 'none');
}